#
# @brief   User defined functions for embedded env
# @version ver.1.6.4
# @date    Sun 13 Feb 2022 10:52:42 AM CET
# @company None, free software to use 2022
# @author  Vladimir Roncevic <elektron.ronca@gmail.com>
#

# Embedded helper
function __em_helper {
    read -r -d '' END_HELP_TXT <<- END_HELP_TXT
### Flashing AVR mcus using avrdude (provide MCU and HEX file path)
    avr_flash

### Generate Intel Hex file from elf (provide ELF path and HEX name)
    avr_gen_hex

### One file project compile (provide C module and MCU)
    avr_one_file_project_compile

END_HELP_TXT
    echo "$END_HELP_TXT"
}

# Flashing AVR mcus using avrdude
function __avr_flash {
    local MCU=$1 HEX_PATH=$2
    local NUMBER_OF_ARGUMENTS=$#
    local PROGRAMMER="avrispmkII"
    local AVRDUDE_PATH=$(which avrdude)
    if [[ ${NUMBER_OF_ARGUMENTS} -ne 2 ]]; then
        printf "%s\n" "Usage: avr_flash <MCU> <HEX_PATH>"
        return 127
    fi
    if [[ ! -e ${AVRDUDE_PATH} ]]; then
        printf "%s\n" "Check is avrdude installed"
        printf "%s\n" "If missing, run apt-get install avrdude"
        return 128
    fi
    if [[ ! -e ${HEX_PATH} ]]; then
         printf "%s\n" "Hex file ${HEX_PATH} exists ?"
         return 129
    fi
    printf "%s\n" "Using by default programmer ${PROGRAMMER}"
    eval "${AVRDUDE_PATH} -c ${PROGRAMMER} -p ${MCU} -U flash:w:${HEX_PATH}"
    return 0
}

# Generate Intel Hex file from elf
function __avr_gen_hex {
    local NUMBER_OF_ARGUMENTS=$# ELF_FILE=$1 HEX_FILE=$2
    local AVR_OBJCOPY_PATH=$(which avr-objcopy)
    if [[ ${NUMBER_OF_ARGUMENTS} -ne 2 ]]; then
        printf "%s\n" "Usage: avr_gen_hex <ELF_FILE> <HEX_FILE>"
        return 127
    fi
    if [[ ! -e ${AVR_OBJCOPY_PATH} ]]; then
        printf "%s\n" "Check is AVR toolchain installed"
        printf "%s\n" "If missing, run apt-get install avrdude"
        return 128
    fi
    eval "${AVR_OBJCOPY_PATH} -O ihex ${ELF_FILE} ${HEX_FILE}"
    return 0
}

# One file project compile
function __avr_one_file_project_compile {
    local NUMBER_OF_ARGUMENTS=$# FILE_NAME=$1 MCU=$2
    local AVR_GCC_PATH=$(which avr-gcc)
    local AVR_OBJCOPY_PATH=$(which avr-objcopy)
    local AVR_SIZE_PATH=$(which avr-size)
    if [[ ${NUMBER_OF_ARGUMENTS} -ne 2 ]]; then
        printf "%s\n" "Usage: avr_one_file_project_compile <C_FILE> <MCU>"
        return 127
    fi
    if [[ ! -e ${AVR_GCC_PATH} ]]; then
        printf "%s\n" "Check is AVR toolchain installed"
        printf "%s\n" "If missing, run apt-get install avrdude"
        return 128
    fi
    eval "${AVR_GCC_PATH} -g -Os -mmcu=${MCU} -c ${FILE_NAME}"
    eval "${AVR_GCC_PATH} -g -mmcu=${MCU} -o ${FILE_NAME}.elf ${FILE_NAME}.o"
    eval "${AVR_OBJCOPY_PATH} -O ihex ${FILE_NAME}.elf ${FILE_NAME}.hex"
    eval "${AVR_SIZE_PATH} --format=avr --mcu=${MCU} ${FILE_NAME}.elf"
    return 0
}

